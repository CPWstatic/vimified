{"name":"vimified","body":"vimified\r\n========\r\n\r\n> Frankly, my dear, you're gonna be vimified one day!\r\n\r\nKick-ass Vim configuration framework, built on top of *awesome* [Vundle](https://github.com/gmarik/vundle). \r\n\r\n![ctrlp view](http://f.cl.ly/items/3a0X3F3x3r0K1n1u1Y2r/vimified.png)\r\n\r\nHow to install\r\n--------------\r\n\r\nGrab the project:\r\n\r\n    cd \r\n    git clone git://github.com/zaiste/vimified.git\r\n    ln -sfn vimified ~/.vim\r\n    ln -sfn vimified/vimrc ~/.vimrc\r\n    cd vimified\r\n\r\nSet up Vundle\r\n\r\n    mkdir bundle\r\n    git clone https://github.com/gmarik/vundle.git bundle/vundle\r\n\r\nSet up your local configuration via `local.vimrc` file and choose package you\r\nwant to use:\r\n\r\n    echo \"let g:vimified_packages = ['general', 'coding', 'clojure', 'color']\" > local.vimrc\r\n\r\nInstall plugins: \r\n\r\n    vim +BundleInstall +qall\r\n\r\nEnjoy!\r\n    \r\nPackages\r\n--------\r\n\r\nInside your local configuration file `$HOME/.vim/local.vimrc` set `g:vimified_packages` variable with packages you want to use. \r\n\r\nFor example, if you are only interested in Ruby/Rails related stuff, put something like the following line inside `$HOME/.vim/local.vimrc`:\r\n\r\n    let g:vimified_packages = ['general', 'coding', 'ruby', 'color']\r\n\r\nAvaible packages:\r\n\r\n * general\r\n * fancy\r\n * os\r\n * coding \r\n * ruby\r\n * html\r\n * css\r\n * js \r\n * clojure\r\n * haskel\r\n * color\r\n\r\n### General \r\n\r\n#### [ack.vim](http://github.com/mileszs/ack.vim)\r\n\r\nVim plugin for the Perl module / CLI script 'ack'. \r\n\r\n**Command**: `,a` \r\n\r\n#### [hammer](https://github.com/matthias-guenther/hammer.vim)\r\n\r\nvim, your markup language of choice, and your browser of choice. \r\n\r\n**Command**: `,p` \r\n\r\n#### [vim-align](https://github.com/tsaleh/vim-align)\r\n\r\nClone of the Align.vba file, since I think VBA files are a freaking abomination. \r\n\r\n#### [vim-endwise](https://github.com/tpope/vim-endwise)\r\n\r\nendwise.vim: wisely add \"end\" in ruby, endfunction/endif/more in vim script, etc \r\n\r\n#### [vim-repeat](https://github.com/tpope/vim-repeat)\r\n\r\nrepeat.vim: enable repeating supported plugin maps with \".\"\r\n\r\n#### [vim-speeddating](https://github.com/tpope/vim-speeddating)\r\n\r\nspeeddating.vim: use CTRL-A/CTRL-X to increment dates, times, and more \r\n\r\n#### [vim-surround](https://github.com/tpope/vim-surround)\r\n\r\nsurround.vim: quoting/parenthesizing made simple \r\n\r\n#### [vim-unimpaired](https://github.com/tpope/vim-unimpaired)\r\n\r\nunimpaired.vim: pairs of handy bracket mappings \r\n\r\n#### [nerdtree](https://github.com/scrooloose/nerdtree)\r\n\r\nA tree explorer plugin for vim.\r\n\r\n**Command:** `ctrl-u`\r\n\r\n#### [vim-space](https://github.com/spiiph/vim-space)\r\n\r\nspace.vim - Smart Space key for Vim\r\n\r\n#### [vim-textobj-user](https://github.com/kana/vim-textobj-user)\r\n\r\nVim plugin: Support for user-defined text objects \r\n\r\n#### [vim-yankring](https://github.com/chrismetcalf/vim-yankring)\r\n\r\nMirror of yankring.vim \r\n\r\n**Command:** `,y`\r\n\r\n#### [vim-ident-object](https://github.com/michaeljsmith/vim-indent-object)\r\n\r\nVim plugin that defines a new text object representing lines of code at the same indent level. Useful for python/vim scripts, etc. \r\n\r\n#### [vim-matchit](https://github.com/mirell/vim-matchit)\r\n\r\nThe matchit.vim script allows you to configure % to match more than just single characters.\r\n\r\n#### [ctrlp](https://github.com/kien/ctrlp.vim)\r\n\r\nFuzzy file, buffer, mru and tag finder.\r\n\r\n**Command:** `ctrl-p`\r\n\r\n![ctrlp view](http://f.cl.ly/items/393i0b0N2C1H1e0Q2K3k/ctrlp.png)\r\n\r\n### Fancy\r\n\r\n#### [powerline](https://github.com/Lokaltog/vim-powerline)\r\n\r\nThe ultimate vim statusline utility.\r\n\r\n### OS\r\n\r\n#### [tmux.vim](https://github.com/zaiste/tmux.vim)\r\n\r\n#### [vimux](https://github.com/benmills/vimux)\r\n\r\n### Coding\r\n\r\n#### [tagbar](https://github.com/majutsushi/tagbar)\r\n\r\nVim plugin that displays tags in a window, ordered by class etc. \r\n\r\n**Command:** `,t`\r\n\r\n#### [gitv](https://github.com/gregsexton/gitv)\r\n\r\ngitk for Vim.\r\n\r\n#### [nerdcommenter](https://github.com/scrooloose/nerdcommenter)\r\n\r\nVim plugin for intensely orgasmic commenting.\r\n\r\n**Command:** `,/`\r\n\r\n#### [splice.vim](https://github.com/sjl/splice.vim)\r\n\r\nA Vim plugin for managing three-way merges.\r\n\r\n#### [vim-fugitive](https://github.com/tpope/vim-fugitive)\r\n\r\nfugitive.vim: a Git wrapper so awesome, it should be illegal \r\n\r\n#### [syntastic](https://github.com/scrooloose/syntastic)\r\n\r\nSyntax checking hacks for vim \r\n\r\n### Ruby \r\n\r\n#### [vim-ruby](https://github.com/vim-ruby/vim-ruby)\r\n\r\n#### [vim-rails](https://github.com/tpope/vim-rails)\r\n\r\nrails.vim: Ruby on Rails power tools \r\n\r\n#### [vim-textobj-rubyblock](https://github.com/nelstrom/vim-textobj-rubyblock)\r\n\r\nA custom text object for selecting ruby blocks.\r\n\r\n#### [vim-ruby-refactoring](https://github.com/ecomba/vim-ruby-refactoring)\r\n\r\nRefactoring tool for Ruby in vim!\r\n\r\n**Commands**:\r\n\r\n  - [RAddParameter](http://justinram.wordpress.com/2010/12/30/vim-ruby-refactoring-add-parameter-2/) : `,rap`\r\n  - [RInlineTemp](http://justinram.wordpress.com/2010/12/30/vim-ruby-refactoring-inline-temp/) : `,rit`\r\n  - [RExtractMethod](http://justinram.wordpress.com/2010/12/31/vim-ruby-refactoring-extract-method/) : `,rem`\r\n  - [RRenameLocalVariable](http://justinram.wordpress.com/2010/12/31/vim-ruby-refactoring-rename-local-variable/) : `,rrlv`\r\n  - [RRenameInstanceVariable](http://justinram.wordpress.com/2010/12/31/vim-ruby-refactoring-rename-instance-variable/) : `,rriv`\r\n\r\n### HTML\r\n\r\n#### [vim-haml](https://github.com/tpope/vim-haml)\r\n\r\nVim runtime files for Haml, Sass, and SCSS.\r\n\r\n### CSS\r\n\r\n### JS\r\n\r\n#### [vim-coffee-script](https://github.com/kchmck/vim-coffee-script)\r\n\r\nCoffeeScript support for vim. \r\n\r\n### Clojure\r\n\r\n#### [vimclojure](https://github.com/zaiste/VimClojure)\r\n\r\n### Haskell\r\n\r\n[vim-syntax-haskell-cabal](https://github.com/Twinside/vim-syntax-haskell-cabal)\r\n\r\nSyntax file for Haskell's cabal syntax file\r\n\r\n#### [haskellmode-vim](https://github.com/lukerandall/haskellmode-vim)\r\n\r\nAn unpacked copy of the haskellmode vimball. Ping me if it needs updating.\r\n\r\n####\r\n\r\n### Color \r\n\r\n#### [molokai](https://github.com/tomasr/molokai)\r\n\r\nMolokai color scheme for Vim. \r\n\r\n####\r\n[vim-colors-solarized](https://github.com/altercation/vim-colors-solarized)\r\n\r\nprecision colorscheme for the vim text editor\r\n\r\n#### [badwolf](https://github.com/sjl/badwolf)\r\n\r\nA Vim color scheme.\r\n\r\n### Misc\r\n\r\n#### [vim-pastie](https://github.com/tpope/vim-pastie)\r\n\r\npastie.vim: interface for pastie.org \r\n\r\n### Not active\r\n\r\n#### [neocomplcache](https://github.com/Shougo/neocomplcache.git)\r\n\r\nUltimate auto-completion system for Vim.\r\n\r\n*Disactivated*\r\n\r\n## Call for Help\r\n\r\nIf you have ideas on how to make this Vim configration framework better, donâ€™t hesitate to fork and send pull requests. Thanks!\r\n\r\n### Contributors\r\n\r\n * [sharnik](https://github.com/sharnik)\r\n\r\n### Inspired by \r\n\r\n * [dotvim](https://github.com/astrails/dotvim)\r\n * [Steve Losh's dotfiles](https://github.com/sjl/dotfiles)\r\n * [skwp's dotfiles](https://github.com/skwp/dotfiles)\r\n\r\n### Cooked by [Zaiste!](http://zaiste.net)\r\n","tagline":"Ultimate, kick-ass VIM configuration on top of Vundle.","google":"UA-32168153-1","note":"Don't delete this file! It's used internally to help with page regeneration."}